/**
 * 
 */
package com.sj.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.sj.service.BookService;
import com.sj.model.Book;

/**
 * @author HP

 *
 */
@RestController
@RequestMapping(value="/web")
@CrossOrigin(origins="http://localhost:4200")
public class BookController {
	@Autowired
	BookService bookService;
	
	@GetMapping(value="/hi")
	public String sayHi(){		
		
		return "Hi World";
		
	}
	
	@GetMapping(value="/books")
	public List<Book> getBooks(){
		
	   return bookService.getBooks();
		
	}
	@GetMapping(value="/latestbooks")
	public List<Book> getLatestBooks(){
		
	   return bookService.getLatestBooks();
		
	}
	
	
	@GetMapping(value="/books/{id}")
	public Optional<Book> getBookById(@PathVariable int id) {
				System.out.println(id);
		return bookService.getBookById(id);
	
	}	
	
	
	  @GetMapping(value="/delbooks/{id}") 
	  public List<Book> deleteBook1(@PathVariable int id) 
	  {
	      
	      System.out.println("del in controller"+id);
	      bookService.deleteBook(id);
	      
	    
	 
	    //return "deleted";
	     return bookService.getBooks();
	     
	     
	  
	  }
	 
	
    /*
     * @RequestMapping(value="/delbooks/{id}") public deleteBook(@PathVariable int
     * id) { System.out.println("del in controller..."+id);
     * bookService.deleteBook(id);
     * 
     * }
     */
	
	@PutMapping(value ="/books")
	public Book  addBook(@RequestBody Book book) {
		   System.out.println("in update");
		return  bookService.addBook(book);
			}
	
	
	
	@PostMapping(value ="/books")
	public Book  editBook(@RequestBody Book book) {
		   System.out.println("in post");
		return  bookService.updateBook(book);
		
	}
	
	
	
	
	
	
	
	
	

}
